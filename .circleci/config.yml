version: 2
jobs:
  build:
    docker:
      - image: ubuntu:17.10
    steps:
      - run:
          name: Install build dependencies
          command: |
            apt-get -qq update
            apt-get -qy install curl ca-certificates lcov libpoco-dev libleveldb-dev git-core cmake build-essential libboost-regex-dev libboost-filesystem-dev libboost-test-dev libboost-system-dev libboost-program-options-dev libz3-dev
      - checkout
      - run:
          name: Fix host authenticity for github.com
          command: |
            mkdir -p ~/.ssh/
            ssh-keyscan github.com >> ~/.ssh/known_hosts
      - restore_cache:
          name: Restore cache
          keys:
            - build-externals-{{ checksum "CMakeLists.txt" }}
      - run:
          name: Build
          command: |
            mkdir -p build
            cd build
            cmake .. -DCMAKE_BUILD_TYPE=RelWithDebInfo
            make
      - run:
          name: Build (coverage)
          command: |
            mkdir -p build-coverage
            cd build-coverage
            cmake .. -DCMAKE_BUILD_TYPE=DEBUG -DPROFILING=ON
            make
      - save_cache:
          name: Save cache (coverage)
          key: build-externals-{{ checksum "CMakeLists.txt" }}
          paths:
            - ~/.hunter
            - build/cpp-ethereum-git
            - build/solidity-git
            - build-coverage/cpp-ethereum-git
            - build-coverage/solidity-git
      - run:
          name: Testing
          command: |
            mkdir -p build/test/report
            build/test/soltest-unittests --log_format=XML --logger=XML,all,build/test/report/results.xml --report_level=detailed
      - run:
          name: Creating Coverage Reports
          command: |
            mkdir -p build-coverage/test/report
            build-coverage/test/soltest-unittests --log_format=XML --logger=XML,all,build/test/report/results.xml --report_level=detailed
            cd build-coverage
            rm -rf test/
            lcov --directory . --capture --output-file coverage.info # capture coverage info
            lcov --remove coverage.info '/usr/*' --output-file coverage.info # filter out system
            lcov --list coverage.info #debug info
            bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"
      - store_artifacts:
          path: build/soltest/soltest
          destination: soltest
      - store_artifacts:
          path: build/test/report
          destination: report
      - store_test_results:
          path: build/test/report
      - persist_to_workspace:
          root: build
          paths:
            - soltest/soltest
            - test/soltest-unittests
